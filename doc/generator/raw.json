{"majorversion": 0, "classmap": {"Loader": {"return": "{function} loader", "name": "Loader", "namespace": "", "module": "loader", "methods": {"exec": {"return": {"type": "function", "description": ""}, "params": [{"type": "string", "name": "fileName", "description": ""}], "description": "Execute closure with a module or evaluate in global context", "guessedname": "exec", "guessedtype": "function"}, "isModule": {"params": [{"type": "string", "name": "module", "description": ""}], "description": "Check if the module is defined, else throw an error\nXXX throw an error or just call an error callback ?", "private": ""}, "setup": {"return": {"type": "object|function", "description": ""}, "params": [{"type": "object|undefined", "name": "defaults", "description": ""}], "description": "Getter and setter for defaults", "guessedname": "setup", "guessedtype": "function"}, "addHandler": {"return": {"type": "function", "description": "onload"}, "description": "Attach onload and onerror handler", "private": "", "params": [{"type": "object", "name": "elem", "description": " dom element"}, {"type": "string", "name": "url", "description": ""}, {"type": "function", "name": "callback", "description": ""}], "guessedname": "addHandler", "guessedtype": "function"}, "remove": {"return": {"type": "function", "description": ""}, "description": "Remove loaded - clean dom and gloaded object", "param": "{string|object|undefined} module", "params": [{"type": "string|array|undefined", "name": "name", "description": ""}], "guessedname": "remove", "guessedtype": "function"}, "js": {"return": {"type": "object", "description": ""}, "description": "Load script", "private": "", "params": [{"type": "string", "name": "url", "description": ""}, {"type": "function", "name": "callback", "description": ""}], "guessedname": "js", "guessedtype": "function"}, "dispatch": {"return": {"type": "string", "description": "type"}, "description": "Dispatch callbacks", "private": "", "params": [{"type": "string", "name": "type", "description": ""}, {"type": "array", "name": "args", "description": ""}, {"type": "object", "name": "s", "description": ""}], "guessedname": "dispatch", "guessedtype": "function"}, "deps": {"return": {"type": "object", "description": ""}, "params": [{"type": "object|undefined|string", "name": "deps", "description": ""}], "description": "Getter and setter for dependencies", "guessedname": "deps", "guessedtype": "function"}, "loaded": {"return": {"type": "function|object", "description": ""}, "params": [{"type": "string|object|undefined", "name": "name", "description": ""}, {"type": "string|object", "name": "value", "description": ""}], "description": "Getter and setter for global loaded files object to avoid double loading.\nCan be used if you have already loaded some files before not using loader,\nand there is no dom element contained such url or you want to avoid domCheck", "guessedname": "loaded", "guessedtype": "function"}, "css": {"return": {"type": "object", "description": "link"}, "description": "Load stylesheet", "metod": "css", "private": "", "params": [{"type": "string", "name": "url", "description": ""}, {"type": "function", "name": "callback", "description": ""}], "param": "{string} url", "guessedname": "css", "guessedtype": "function"}}, "param": "{object} options", "file": "loader.js", "shortname": "Loader", "description": "Load files"}}, "version": "0.0.2", "modules": {"loaderLoader": {"description": "Use this to load the loader in the head of the document", "submodules": [], "classlist": [], "filelist": [], "subdata": {}, "name": "loaderLoader"}, "registerModule": {"description": "This is a second global namespace, I know,\nthe purpose is to make the main loader namespace portable, \nwithout to use jsonp (because using generated namespace will avoid caching)", "submodules": [], "classlist": [], "filelist": ["loaderLoader.js"], "subdata": {}, "param": "{string} id", "guessedname": "___registerLoaderModule___", "guessedtype": "function", "name": "registerModule"}, "loader": {"description": "Load sync or async javascript, css, images files.", "license": "Dual licensed under the MIT and GPL licenses.", "submodules": [], "classlist": ["Loader"], "author": "Oleg Slobodskoi aka Kof (http://github.com/kof/loader)", "filelist": ["loader.js"], "subdata": {}, "version": "0.0.2", "guessedname": "root", "guessedtype": "property", "name": "loader"}}, "filemap": {"loaderLoader.js": {"classlist": [], "name": "loaderLoader.js", "module": "registerModule"}, "loader.js": {"classlist": ["Loader"], "name": "loader.js", "module": "loader"}}}