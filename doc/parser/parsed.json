{"majorversion": 0, "classmap": {"loader": {"return": "{Function}", "name": "loader", "namespace": "", "module": "loader", "methods": {"isModule": {"params": [{"type": "string", "name": "module", "description": ""}], "description": "Check if the module is defined, else throw an error\nXXX throw an error or just call an error callback ?"}, "___registerLoaderModule___": {"params": [{"type": "string", "name": "id", "description": ""}, {"type": "Function", "name": "fn", "description": ""}, {"type": "boolean", "name": "globalEval", "description": " if true module will be converted toString and evaluated in the global context without module closure"}], "description": "This is a second global namespace, I know,\nthe purpose is to make the main loader namespace portable, \nwithout to use jsonp (because using generated namespace will avoid caching)", "guessedname": "___registerLoaderModule___", "guessedtype": "function"}, "remove": {"return": {"type": "Function", "description": ""}, "params": [{"type": "string|Object|undefined", "name": "module", "description": ""}, {"type": "boolean", "name": "[deep]", "description": " destroy also dependencies and dependencies dependencies"}], "description": "Remove loaded dependencies", "guessedname": "remove", "guessedtype": "function"}, "deps": {"return": {"type": "Object", "description": ""}, "params": [{"type": "Object|undefined|string", "name": "deps", "description": ""}], "description": "Getter and setter for dependencies", "guessedname": "deps", "guessedtype": "function"}, "exec": {"return": {"type": "Function", "description": ""}, "params": [{"type": "string", "name": "module", "description": ""}], "description": "Execute closure with a module or evaluate in global context", "guessedname": "exec", "guessedtype": "function"}}, "param": "{string|Object} module", "file": "loader.js", "shortname": "loader", "description": "Load module described in dependencies json"}, "$": {"name": "$", "namespace": "", "module": "utils", "param": "{String} sel", "file": "loader.js", "shortname": "$", "method": "$", "description": "A very simple selector engine"}, "Loader": {"return": "{Function} loader", "name": "Loader", "constructors": [{"params": [{"type": "Object", "name": "options", "description": ""}], "description": "Load files"}], "namespace": "", "module": "loader", "methods": {"img": {"return": {"type": "Object", "description": "img"}, "params": [{"type": "string", "name": "url", "description": ""}, {"type": "Function", "name": "callback", "description": ""}], "description": "Load image", "guessedname": "img", "guessedtype": "function"}, "setup": {"return": {"type": "Object|Function", "description": ""}, "params": [{"type": "Object|undefined", "name": "defaults", "description": ""}], "description": "Getter and setter for defaults", "guessedname": "setup", "guessedtype": "function"}, "addHandler": {"return": {"type": "Function", "description": "onload"}, "params": [{"type": "Object", "name": "elem", "description": " dom element"}, {"type": "string", "name": "url", "description": ""}, {"type": "Function", "name": "callback", "description": ""}], "description": "Attach onload and onerror handler", "guessedname": "addHandler", "guessedtype": "function"}, "dispatch": {"return": {"type": "string", "description": "type"}, "params": [{"type": "string", "name": "type", "description": ""}, {"type": "Array", "name": "args", "description": ""}, {"type": "Object", "name": "s", "description": ""}], "description": "Dispatch callbacks", "guessedname": "dispatch", "guessedtype": "function"}, "js": {"return": {"type": "Object", "description": ""}, "params": [{"type": "string", "name": "url", "description": ""}, {"type": "Function", "name": "callback", "description": ""}], "description": "Load script", "guessedname": "js", "guessedtype": "function"}, "remove": {"return": {"type": "Function", "description": ""}, "params": [{"type": "string|Array|undefined", "name": "name", "description": ""}], "description": "Remove loaded - clean dom and gloaded object", "guessedname": "remove", "guessedtype": "function"}, "loaded": {"return": {"type": "Function|Object", "description": ""}, "params": [{"type": "string|Object|undefined", "name": "name", "description": ""}, {"type": "string|Object", "name": "value", "description": ""}], "description": "Getter and setter for global loaded files object to avoid double loading.\nCan be used if you have already loaded some files before not using loader,\nand there is no dom element contained such url or you want to avoid domCheck", "guessedname": "loaded", "guessedtype": "function"}, "css": {"return": {"type": "Object", "description": "link"}, "params": [{"type": "string", "name": "url", "description": ""}, {"type": "Function", "name": "callback", "description": ""}], "description": "Load stylesheet", "guessedname": "css", "guessedtype": "function"}}, "file": "loader.js", "shortname": "Loader", "description": "Load files"}}, "version": "0.0.2", "modules": {"utils": {"description": "Utils\nSome of them borrowed by jQuery", "submodules": [], "classlist": ["$"], "filelist": [], "subdata": {}, "guessedname": "root", "guessedtype": "property", "name": "utils"}, "loaderLoader": {"description": "Use this to load the loader in the head of the document", "submodules": [], "classlist": [], "filelist": [], "subdata": {}, "name": "loaderLoader"}, "loader": {"description": "Load javascript, css, images or text/templates", "license": "Dual licensed under the MIT and GPL licenses.", "submodules": [], "classlist": ["Loader", "loader"], "author": "Oleg Slobodskoi aka Kof (http://github.com/kof/loader)", "filelist": ["loader.js", "loaderLoader.js"], "subdata": {}, "version": "0.0.2", "guessedname": "root", "guessedtype": "property", "name": "loader"}}, "filemap": {"loaderLoader.js": {"classlist": [], "name": "loaderLoader.js", "module": "loader"}, "loader.js": {"classlist": ["$", "Loader", "loader"], "name": "loader.js", "module": "loader"}}}